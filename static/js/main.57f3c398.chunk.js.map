{"version":3,"sources":["components/Editor.js","components/Sidebar.js","App.js","reportWebVitals.js","index.js"],"names":["Editor","_ref","currentNote","updateNote","_React$useState","React","useState","_React$useState2","Object","slicedToArray","selectedTab","setSelectedTab","converter","Showdown","Converter","tables","simplifiedAutoLink","strikethrough","tasklists","react_default","a","createElement","js_default","value","body","onChange","onTabChange","generateMarkdownPreview","markdown","Promise","resolve","makeHtml","minEditorHeight","heightUnits","Sidebar","props","noteElements","notes","map","note","index","key","id","className","concat","onClick","setCurrentNoteId","split","event","deleteNote","newNote","App","JSON","parse","localStorage","getItem","setNotes","_React$useState3","_React$useState4","currentNoteId","createNewNote","nanoid","prevNotes","toConsumableArray","findCurrentNote","find","useEffect","setItem","stringify","length","react_split_es","sizes","direction","noteId","stopPropagation","oldNotes","filter","text","newArray","i","oldNote","unshift","objectSpread","push","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.57f3c398.chunk.js","sourcesContent":["import React from \"react\";\r\nimport ReactMde from \"react-mde\";\r\nimport Showdown from \"showdown\";\r\nimport \"react-mde/lib/styles/css/react-mde-all.css\";\r\n\r\nexport default function Editor({ currentNote, updateNote }) {\r\n  const [selectedTab, setSelectedTab] = React.useState(\"write\");\r\n\r\n  const converter = new Showdown.Converter({\r\n    tables: true,\r\n    simplifiedAutoLink: true,\r\n    strikethrough: true,\r\n    tasklists: true,\r\n  });\r\n\r\n  return (\r\n    <ReactMde\r\n      value={currentNote.body}\r\n      onChange={updateNote}\r\n      selectedTab={selectedTab}\r\n      onTabChange={setSelectedTab}\r\n      generateMarkdownPreview={(markdown) =>\r\n        Promise.resolve(converter.makeHtml(markdown))\r\n      }\r\n      minEditorHeight={80}\r\n      heightUnits=\"vh\"\r\n    />\r\n  );\r\n}\r\n","import React from \"react\"\r\n\r\nexport default function Sidebar (props){\r\n\r\n    const noteElements = props.notes.map((note,index) =>(\r\n        <div key={note.id}>\r\n            <div \r\n                className={`title ${\r\n                    note.id === props.currentNote.id ? \"selected-note\" : \"\"\r\n                }`} \r\n                onClick={() => props.setCurrentNoteId(note.id)}\r\n                >\r\n                    <h4 className=\"text-snippet\">{note.body.split(\"\\n\")[0]} </h4>\r\n                <button \r\n                    className=\"delete-btn\"\r\n                    onClick={(event) => props.deleteNote(event, note.id)}\r\n                >\r\n                    <i className=\"gg-trash trash-icon\"></i>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    ))\r\n\r\n\r\n    return (\r\n        <section className=\"pane sidebar\">\r\n            <div className=\"sidebar--header\">\r\n                <h3>Notes</h3>\r\n                <button className=\"new-note\" onClick={props.newNote}>+</button>\r\n            </div>\r\n            {noteElements}\r\n        </section>\r\n        )\r\n}","import React from \"react\";\nimport Editor from \"./components/Editor\";\nimport Sidebar from \"./components/Sidebar\";\nimport Split from \"react-split\";\nimport { nanoid } from \"nanoid\";\n\nfunction App() {\n  const [notes, setNotes] = React.useState(\n    () => JSON.parse(localStorage.getItem(\"notes\")) || []\n    );\n  const [currentNoteId, setCurrentNoteId] = React.useState(\n    (notes[0] && notes[0].id) || \"\"\n  );\n\n  React.useEffect(()=>{\n    localStorage.setItem(\"notes\",JSON.stringify(notes))\n  },[notes])\n\n  function createNewNote() {\n    const newNote = {\n      id: nanoid(),\n      body: \"write something\",\n    };\n    setNotes((prevNotes) => [newNote, ...prevNotes]);\n    setCurrentNoteId(newNote.id);\n  }\n\n  function updateNote(text) {\n    setNotes(oldNotes => {\n      const newArray = []\n      for(let i = 0; i < oldNotes.length; i++) {\n          const oldNote = oldNotes[i]\n          if(oldNote.id === currentNoteId) {\n              newArray.unshift({ ...oldNote, body: text })\n          } else {\n              newArray.push(oldNote)\n          }\n      }\n      return newArray\n  })\n  } \n\n    // running code without arrange the array into the top updated one\n    // setNotes((oldNotes) =>\n    //   oldNotes.map((oldNote) => {\n    //     return oldNote.id === currentNoteId\n    //       ? { ...oldNote, body: text }\n    //       : oldNote;\n    //   })\n    // );\n  \n  function deleteNote(event, noteId){\n    event.stopPropagation ()\n    setNotes(oldNotes=> oldNotes.filter(note => note.id !== noteId))\n  }\n  function findCurrentNote() {\n    return (\n      notes.find((note) => {\n        return note.id === currentNoteId;\n      }) || notes[0]\n    );\n  }\n\n  return (\n    <main>\n      {notes.length > 0 ? (\n        <Split className=\"split\" sizes={[20, 80]} direction=\"horizontal\">\n          <Sidebar\n            notes={notes}\n            currentNote={findCurrentNote()}\n            setCurrentNoteId={setCurrentNoteId}\n            newNote={createNewNote}\n            deleteNote={deleteNote}\n          />\n          {currentNoteId && notes.length > 0 && \n            <Editor currentNote={findCurrentNote()} updateNote={updateNote} />\n          }\n        </Split>\n      ) : (\n        <div className=\"no-notes\">\n          <h1>You have no notes</h1>\n          <button className=\"first-note\" onClick={createNewNote}>\n            Create one now\n          </button>\n        </div>\n      )}\n    </main>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './style.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}